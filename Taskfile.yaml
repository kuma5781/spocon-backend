version: "3"

vars:
  ADD_PATH: env PATH="$(pwd)/bin:$PATH"
  JOIN_COMMAND: join .Imports " "
  APP_CONTAINER_NAME: spocon-backend-ex
  GOLANGCI_LINT_VERSION: v1.59.1

tasks:
  setup:
    desc: "開発に必要なGo製ツールをインストールします。"
    cmds: 
      - GOBIN=$(pwd)/bin go install $(go list -e -f {{ "'{{ " }} {{.JOIN_COMMAND}} {{ "}}' " }} tools/tools.go)
  up:
    desc: "spocon-backendで利用するコンテナ郡を立ち上げます。"
    cmds:
      - docker-compose up -d --build
      - task: migration:up
  down:
    desc: "spocon-backendで利用するコンテナ郡を停止します。"
    cmds:
      - docker-compose down
  lint:
    desc: "Goの静的解析ツールを実行します。静的解析でルールに準拠していない場合はエラーになります。"
    cmds:
      - docker run --rm -v $(pwd):/app -v ~/.cache/golangci-lint/{{.GOLANGCI_LINT_VERSION}}:/root/.cache -w /app golangci/golangci-lint:{{.GOLANGCI_LINT_VERSION}} golangci-lint run -v --timeout 5m
  lintfix:
    desc: "Goの静的解析ツールを実行します。静的解析でルールに準拠していない場合は修正します。"
    cmds:
      - docker run --rm -v $(pwd):/app -v ~/.cache/golangci-lint/{{.GOLANGCI_LINT_VERSION}}:/root/.cache -w /app golangci/golangci-lint:{{.GOLANGCI_LINT_VERSION}} golangci-lint run --fix -v --timeout 5m
  migration:up:
    desc: "全てのマイグレーションを実行します。"
    cmds:
      - docker exec -it {{.APP_CONTAINER_NAME}} go run -tags=migrate ./operation/migrations/main.go up
  migration:down:
    desc: "全てのマイグレーションを戻して、テーブル削除まで行います。"
    cmds:
      - docker exec -it {{.APP_CONTAINER_NAME}} go run -tags=migrate ./operation/migrations/main.go down
  migration:force:
    desc: "引数に指定したマイグレーションファイルのバージョンに強制的に戻し、マイグレーションの再実行が可能な状態にします。"
    cmds:
      - docker exec -it {{.APP_CONTAINER_NAME}} go run -tags=migrate ./operation/migrations/main.go force {{.CLI_ARGS}}
  migration:step:
    desc: "引数に指定したマイグレーションファイルのバージョンまでマイグレーションを実行します。マイグレーションを適用したい場合は正の数、戻したい場合は負の数を指定する。"
    cmds:
      - docker exec -it {{.APP_CONTAINER_NAME}} go run -tags=migrate ./operation/migrations/main.go step {{.CLI_ARGS}}
  migration:create-file:
    desc: "引数に指定したファイル名で新しいマイグレーションファイルを作成します。"
    cmds:
      - go run github.com/golang-migrate/migrate/v4/cmd/migrate create -ext sql -dir database/migrations -seq {{.CLI_ARGS}}
  oapi:
    desc: "OpenAPIの定義からGoのコードを生成します。"
    cmds:
      - "{{.ADD_PATH}} oapi-codegen -generate echo-server -o ./internal/openapi/server.gen.go ./openapi/openapi.yaml"
      - "{{.ADD_PATH}} oapi-codegen -generate types -o ./internal/openapi/types.gen.go ./openapi/openapi.yaml"
  mockgen:
    desc: "go:generateが指定されているファイルのinterfaceのmockを作成します。"
    cmds:
      - "{{.ADD_PATH}} go generate ./..."
