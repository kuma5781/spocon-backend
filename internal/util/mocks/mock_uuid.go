// Code generated by MockGen. DO NOT EDIT.
// Source: uuid.go
//
// Generated by this command:
//
//	mockgen -source=uuid.go -destination=mocks/mock_uuid.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUUIDv7Generator is a mock of UUIDv7Generator interface.
type MockUUIDv7Generator struct {
	ctrl     *gomock.Controller
	recorder *MockUUIDv7GeneratorMockRecorder
}

// MockUUIDv7GeneratorMockRecorder is the mock recorder for MockUUIDv7Generator.
type MockUUIDv7GeneratorMockRecorder struct {
	mock *MockUUIDv7Generator
}

// NewMockUUIDv7Generator creates a new mock instance.
func NewMockUUIDv7Generator(ctrl *gomock.Controller) *MockUUIDv7Generator {
	mock := &MockUUIDv7Generator{ctrl: ctrl}
	mock.recorder = &MockUUIDv7GeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUUIDv7Generator) EXPECT() *MockUUIDv7GeneratorMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockUUIDv7Generator) Generate() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockUUIDv7GeneratorMockRecorder) Generate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockUUIDv7Generator)(nil).Generate))
}
