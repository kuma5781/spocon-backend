// Code generated by MockGen. DO NOT EDIT.
// Source: grade_usecase.go
//
// Generated by this command:
//
//	mockgen -source=grade_usecase.go -destination=mocks/mock_grade_usecase.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	model "spocon-backend/internal/domain/model/grade"

	gomock "go.uber.org/mock/gomock"
)

// MockGradeUsecase is a mock of GradeUsecase interface.
type MockGradeUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockGradeUsecaseMockRecorder
}

// MockGradeUsecaseMockRecorder is the mock recorder for MockGradeUsecase.
type MockGradeUsecaseMockRecorder struct {
	mock *MockGradeUsecase
}

// NewMockGradeUsecase creates a new mock instance.
func NewMockGradeUsecase(ctrl *gomock.Controller) *MockGradeUsecase {
	mock := &MockGradeUsecase{ctrl: ctrl}
	mock.recorder = &MockGradeUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGradeUsecase) EXPECT() *MockGradeUsecaseMockRecorder {
	return m.recorder
}

// GetGrades mocks base method.
func (m *MockGradeUsecase) GetGrades() ([]model.Grade, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGrades")
	ret0, _ := ret[0].([]model.Grade)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGrades indicates an expected call of GetGrades.
func (mr *MockGradeUsecaseMockRecorder) GetGrades() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGrades", reflect.TypeOf((*MockGradeUsecase)(nil).GetGrades))
}
